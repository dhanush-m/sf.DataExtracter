import { SFMC_Automation } from '../types/bldr_assets/sfmc_automation';
import { SFMC_Client } from '../types/sfmc_client';
export declare class AutomationStudio {
    sfmc: SFMC_Client;
    contentBuilder: any;
    emailStudio: any;
    constructor(sfmc: SFMC_Client, contentBuilder: any, emailStudio: any);
    /**
     *
     * @param request.contentType
     * @param request.searchKey
     * @param request.searchTerm
     *
     * ```
     *  {
     *      contentType: '',
     *      searchKey: '',
     *      searchTerm: ''
     *  }
     * ```
     *
     * Output
     * ```
     * [{
     *      Name: string;
     *      ID: number;
     *      CreatedDate: string;
     *      ModifiedDate: string;
     *      ParentFolder: {
     *          Name: string;
     *          ID: string;
     *      }
     *  }]
     * ```
     */
    searchFolders: (request: {
        contentType: string;
        searchKey: string;
        searchTerm: string;
    }) => Promise<any>;
    /**
     *
     * @param request.searchKey
     * @param request.searchTerm
     *
     * ```
     *  {
     *      searchKey: '',
     *      searchTerm: ''
     *  }
     * ```
     *
     * Output
     * ```
     * [{
     *      ID: number,
     *      Name: string,
     *      AssetType: string,
     *      CreatedDate: string,
     *      ModifiedDate: string,
     *      Category: {
     *          Name: string,
     *          ParentId: number
     *      }
     *  }]
     * ```
     */
    searchAssets: (request: {
        searchKey: string;
        searchTerm: string;
    }) => Promise<any>;
    /**
     *
     * @param request.searchKey
     * @param request.searchTerm
     *
     * ```
     *  {
     *      searchKey: '',
     *      searchTerm: ''
     *  }
     * ```
     *
     * Output
     * ```
     * [{
     *      ID: number,
     *      Name: string,
     *      AssetType: string,
     *      CreatedDate: string,
     *      ModifiedDate: string,
     *      Category: {
     *          Name: string,
     *          ParentId: number
     *      }
     *  }]
     * ```
     */
    gatherAssetsByCategoryId: (request: {
        contentType: string;
        categoryId: number;
    }) => Promise<any>;
    /**
     *
     * @param objectId
     */
    gatherAssetById: (objectId: string) => Promise<any>;
    /**
     *
     * @param automations
     */
    gatherAutomationActivityDefinitions: (automations: SFMC_Automation[] | SFMC_Automation) => Promise<any[] | undefined>;
    /**
     *
     * @param automationDefinitions
     */
    gatherAutomationActivityDependencies: (automationDefinitions: any[]) => Promise<any>;
    /**
     * Method to search Automation Studio Activity Endpoint
     *
     * @param {string} searchActivity Endpoint property to search
     * @param {string} searchTerm of asset to search for
     */
    searchActivity: (searchActivity: string, searchTerm: string) => Promise<any>;
    gatherAutomationDefinitionsByCategoryId: (request: {
        contentType: string;
        categoryId: number;
    }, removeRoot?: boolean) => Promise<{
        assets: any[];
        folders: any[];
    }>;
    gatherAutomationDefinitionsById: (request: {
        contentType: string;
        assetId: number;
    }) => Promise<{
        assets: any[];
        folders: any[];
    }>;
}
